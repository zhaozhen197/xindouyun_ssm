<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hello.dao.OtherMapper">
  <resultMap id="BaseResultMap" type="com.hello.model.pojo.Other">
    <id column="other_id" jdbcType="INTEGER" property="otherId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
    <result column="cash_income" jdbcType="INTEGER" property="cashIncome" />
    <result column="creation_time" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    other_id, user_id, user_phone, cash_income, creation_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from other
    where other_id = #{otherId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from other
    where other_id = #{otherId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hello.model.pojo.Other">
    insert into other (other_id, user_id, user_phone, 
      cash_income, creation_time, update_time
      )
    values (#{otherId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{userPhone,jdbcType=VARCHAR}, 
      #{cashIncome,jdbcType=INTEGER}, #{creationTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hello.model.pojo.Other">
    insert into other
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="otherId != null">
        other_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userPhone != null">
        user_phone,
      </if>
      <if test="cashIncome != null">
        cash_income,
      </if>
      <if test="creationTime != null">
        creation_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="otherId != null">
        #{otherId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userPhone != null">
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="cashIncome != null">
        #{cashIncome,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hello.model.pojo.Other">
    update other
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userPhone != null">
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="cashIncome != null">
        cash_income = #{cashIncome,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        creation_time = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where other_id = #{otherId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hello.model.pojo.Other">
    update other
    set user_id = #{userId,jdbcType=INTEGER},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      cash_income = #{cashIncome,jdbcType=INTEGER},
      creation_time = #{creationTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where other_id = #{otherId,jdbcType=INTEGER}
  </update>

  <!--根据用户id获取相关信息-->
  <select id="getOtherByUserId" parameterType="int" resultType="com.hello.model.pojo.Other">
          select * from other where user_id = #{userId}
  </select>
</mapper>