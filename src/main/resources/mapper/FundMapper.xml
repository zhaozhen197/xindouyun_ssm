<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hello.dao.FundMapper">
  <resultMap id="BaseResultMap" type="com.hello.model.pojo.Fund">
    <id column="fund_id" jdbcType="INTEGER" property="fundId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
    <result column="fund_money" jdbcType="INTEGER" property="fundMoney" />
    <result column="payment_time" jdbcType="INTEGER" property="paymentTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    fund_id, user_id, user_phone, fund_money, payment_time, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fund
    where fund_id = #{fundId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from fund
    where fund_id = #{fundId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hello.model.pojo.Fund">
    insert into fund (fund_id, user_id, user_phone, 
      fund_money, payment_time, create_time, 
      update_time)
    values (#{fundId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{userPhone,jdbcType=VARCHAR}, 
      #{fundMoney,jdbcType=INTEGER}, #{paymentTime,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hello.model.pojo.Fund">
    insert into fund
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fundId != null">
        fund_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userPhone != null">
        user_phone,
      </if>
      <if test="fundMoney != null">
        fund_money,
      </if>
      <if test="paymentTime != null">
        payment_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fundId != null">
        #{fundId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userPhone != null">
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="fundMoney != null">
        #{fundMoney,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null">
        #{paymentTime,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hello.model.pojo.Fund">
    update fund
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userPhone != null">
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="fundMoney != null">
        fund_money = #{fundMoney,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null">
        payment_time = #{paymentTime,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where fund_id = #{fundId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hello.model.pojo.Fund">
    update fund
    set user_id = #{userId,jdbcType=INTEGER},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      fund_money = #{fundMoney,jdbcType=INTEGER},
      payment_time = #{paymentTime,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where fund_id = #{fundId,jdbcType=INTEGER}
  </update>

  <!--根据用户id获取相关信息-->
  <select id="getFundByUserId" parameterType="int" resultType="com.hello.model.pojo.Fund">
      select * from fund where user_id = #{userId}
    </select>
</mapper>